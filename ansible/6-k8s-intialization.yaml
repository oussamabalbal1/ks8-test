---
- hosts: all
  become: yes
  tasks:
    - name: Load required kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter
    - name: Load overlay module
      command: modprobe overlay

    - name: Load br_netfilter module
      command: modprobe br_netfilter

    - name: Set sysctl parameters for Kubernetes networking
      copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply sysctl changes
      command: sysctl --system

    - name: Install required packages for containerd
      apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: yes

    - name: Download Docker GPG key using shell
      shell: |
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      become: yes
      args:
        creates: /etc/apt/keyrings/docker.asc
    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc
      become: true
    - name: Add Docker repository to APT sources
      shell: |
            echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash

    - name: Update package index
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present
    - name: Ensure /etc/containerd directory exists
      file:
        path: /etc/containerd
        state: directory

    - name: Generate default containerd configuration
      command: containerd config default
      register: containerd_default_config

    - name: Create /etc/containerd/config.toml with default configuration
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_default_config.stdout }}"

    - name: Replace SystemdCgroup = false with SystemdCgroup = true in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: '^\s*SystemdCgroup\s*=\s*false'
        replace: 'SystemdCgroup = true'
        backup: yes
      notify:
        - Restart containerd

    - name: Restart containerd service
      service:
        name: containerd
        state: restarted

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache after adding Kubernetes repo
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      register: kubernetes_installation

    - name: Mark Kubernetes packages to hold
      command: apt-mark hold kubelet kubeadm kubectl

  handlers:
    - name: Restart containerd
      service:
        name: containerd
        state: restarted
