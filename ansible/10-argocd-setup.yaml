---
- name: Install ArgoCD on Kubernetes
  hosts: master
  vars:
    patch_payload: '{"spec": {"type": "NodePort"}}'  # Correct JSON payload
#   become: yes # TO EXECUTE THE COMMAND AS UBUNTU USER
  tasks:
    - name: Check if ArgoCD namespace exists
      shell: kubectl get namespace argocd --no-headers
      register: namespace_check
      ignore_errors: true

    - name: Create ArgoCD namespace if it doesn't exist
      shell: kubectl create namespace argocd
      when: namespace_check.rc != 0

    - name: Install ArgoCD
      shell: |
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      args:
        creates: /tmp/argocd_installed
      retries: 5
      delay: 10
      register: argocd_install
      until: argocd_install.rc == 0

    # - name: Wait for ArgoCD server pods to be ready
    #   shell: kubectl wait --namespace argocd --for=condition=Ready pod --selector=app.kubernetes.io/part-of=argocd --timeout=300s
    #   retries: 20
    #   delay: 5
    #   register: pods_status
    #   until: pods_status.rc == 0

    - name: Wait for ArgoCD server pods to be ready
      shell: kubectl wait --namespace argocd --for=condition=Ready pod --selector=app.kubernetes.io/name=argocd-server --timeout=300s
      retries: 20
      delay: 5
      register: pods_status
      until: pods_status.rc == 0

    - name: Print ArgoCD admin password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: admin_password
      changed_when: false

    - name: Display ArgoCD admin password
      debug:
        msg: "ArgoCD admin password: {{ admin_password.stdout }}"


    - name: Patch ArgoCD service to LoadBalancer
      ansible.builtin.shell:
        cmd: kubectl patch svc argocd-server -n argocd -p '{{ patch_payload }}'
      register: patch_output
      changed_when: '"patched" in patch_output.stdout'
      failed_when: '"Error from server" in patch_output.stderr'

    - name: Display patch output
      ansible.builtin.debug:
        msg:
          - "stdout: {{ patch_output.stdout }}"
          - "stderr: {{ patch_output.stderr }}"

    - name: Download the ArgoCD CLI binary
      ansible.builtin.get_url:
        url: "https://github.com/argoproj/argo-cd/releases/download/v2.13.2/argocd-linux-amd64"
        dest: "/usr/local/bin/argocd"
        mode: '0755'

    - name: Verify ArgoCD CLI installation
      ansible.builtin.command: argocd version
      register: argocd_version_output
      failed_when: "'Version' not in argocd_version_output.stdout"

    - name: Display installed ArgoCD CLI version
      ansible.builtin.debug:
        msg: "{{ argocd_version_output.stdout }}"
    

    


